name: CI

on:
  push:
    branches:
    - master
    paths:
    - 'api/**'
  pull_request:
    branches:
    - master
  schedule:
  - cron: '7 6 * * *'

jobs:
  api_checks:
    name: API Checks
    runs-on: ubuntu-latest
    # Don't run nightly builds for forks.
    if: github.repository == 'allenai/allennlp-demo' || github.event_name != 'schedule'
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-pydeps-${{ env.pythonLocation }}-${{ hashFiles('api/requirements.txt') }}-${{ hashFiles('api/dev-requirements.txt') }}

    - name: Install requirements
      working-directory: api
      run: |
        pip install --upgrade --upgrade-strategy eager -r requirements.txt -r dev-requirements.txt

    - name: Debug info
      run: |
        pip freeze

    - name: Format
      working-directory: api
      if: always()
      run: |
        make format

    - name: Lint
      working-directory: api
      if: always()
      run: |
        make lint

    - name: Type check
      working-directory: api
      if: always()
      run: |
        make typecheck

  endpoint_test:
    name: Endpoint Test
    runs-on: [self-hosted]
    # self-hosted runner only available on main repo
    if: github.repository == 'allenai/allennlp-demo'
    strategy:
      matrix:
        # This should be all of the directory names in api/allennlp_demo that correspond
        # to demo model endpoints.
        model: [
          "atis_parser",
          "bidaf",
          "bidaf_elmo",
          "constituency_parser",
          "coref",
          "dependency_parser",
          "elmo_snli",
          "fine_grained_ner",
          "glove_sentiment_analysis",
          "masked_lm",
          "named_entity_recognition",
          "naqanet",
          "next_token_lm",
          "nlvr_parser",
          "nmn_drop",
          "open_information_extraction",
          "roberta_mnli",
          "roberta_sentiment_analysis",
          "roberta_snli",
          "semantic_role_labeling",
          "transformer_qa",
          "vilbert_vqa",
          "wikitables_parser",
          "tasks",
          "model_cards"
        ]
    steps:
    - uses: actions/checkout@v2
    - name: Build and test endpoint
      working-directory: api
      run: |
        make ${{ matrix.model }}-test DOCKER_TAG=$GITHUB_SHA

  validate_ci:
    name: Validate CI Config
    runs-on: ubuntu-latest
    # Don't run nightly builds for forks.
    if: github.repository == 'allenai/allennlp-demo' || github.event_name != 'schedule'
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install requirements
      run: |
        pip install PyYAML

    - name: Validate GitHub Actions config
      run: |
        # If this step fails, this means the model matrix in the 'endpoint_test' GitHub Actions
        # job needs to be updated.
        python dev/check_models_ci.py

  ui_checks:
    name: UI Checks
    runs-on: ubuntu-latest
    # Don't run nightly builds for forks.
    if: github.repository == 'allenai/allennlp-demo' || github.event_name != 'schedule'
    steps:
      - uses: actions/checkout@v2

      - name: Start application
        run: |
          docker-compose -f docker-compose.ui-only.yaml -f docker-compose.it.yaml up --build --detach

      - name: Lint UI
        run: |
          docker-compose -f docker-compose.ui-only.yaml exec -T ui yarn lint

      - name: Wait for startup
        run: |
          curl --retry-connrefused --retry-delay 5 --retry 240 -f http://localhost:8080

      - name: Run tests
        run: |
          docker-compose -f docker-compose.ui-only.yaml -f docker-compose.it.yaml exec -T it yarn test:it

  


