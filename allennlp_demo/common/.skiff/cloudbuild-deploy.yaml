steps:
- id: pull
  name: gcr.io/cloud-builders/docker
  entrypoint: /bin/bash
  args: [ -c, docker pull gcr.io/$PROJECT_ID/$REPO_NAME-$_MODEL_PATH-api:latest || exit 0 ]
- id: build
  name: gcr.io/cloud-builders/docker
  args: [
    build,
    -f, $_MODEL_PATH/Dockerfile,
    -t, gcr.io/$PROJECT_ID/$REPO_NAME-$_MODEL_PATH-api:latest,
    -t, gcr.io/$PROJECT_ID/$REPO_NAME-$_MODEL_PATH-api:$COMMIT_SHA,
    --cache-from, gcr.io/$PROJECT_ID/$REPO_NAME-$_MODEL_PATH-api:latest,
    .,
  ]
  dir: allennlp_demo
- id: push
  name: gcr.io/cloud-builders/docker
  args: [ push, gcr.io/$PROJECT_ID/$REPO_NAME-$_MODEL_PATH-api:$COMMIT_SHA ]
- id: config
  name: gcr.io/ai2-reviz/jsonnet
  args: [
    -y,
    --output-file, webapp.yaml,
    --tla-str, env=$_ENV,
    --tla-str, image=gcr.io/$PROJECT_ID/$REPO_NAME-$_MODEL_PATH-api:$COMMIT_SHA,
    --tla-str, sha=$COMMIT_SHA,
    --tla-str, cause=Automated Skiff Deploy SHA:$COMMIT_SHA BUILD:$BUILD_ID,
    --tla-str, branch=$BRANCH_NAME,
    --tla-str, repo=$REPO_NAME,
    --tla-str, buildId=$BUILD_ID,
    webapp.jsonnet
  ]
  dir: allennlp_demo/$_MODEL_PATH/.skiff
- id: deploy
  name: gcr.io/ai2-reviz/rudder
  args: [ deploy, -f, webapp.yaml ]
  dir: allennlp_demo/$_MODEL_PATH/.skiff
substitutions:
  _ENV: prod
  _MODEL_PATH: bidaf_elmo
images: [
  gcr.io/$PROJECT_ID/$REPO_NAME-$_MODEL_PATH-api:$COMMIT_SHA,
  gcr.io/$PROJECT_ID/$REPO_NAME-$_MODEL_PATH-api:latest,
]
artifacts:
  objects:
    location: gs://skiff-archive/$REPO_NAME/$_MODEL_PATH/$_ENV/$BUILD_ID/$COMMIT_SHA
    paths:
    -  allennlp_demo/$_MODEL_PATH/.skiff/webapp.yaml
timeout: 900s
